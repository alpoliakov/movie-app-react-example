{"version":3,"sources":["serviceWorker.js","components/MovieItem.jsx","components/MoviesList.jsx","components/ListMoviesWillWatch.jsx","components/Filters.jsx","components/Pagination.jsx","components/App.jsx","api.js","index.js"],"names":["Boolean","window","location","hostname","match","MovieItem","changeViewingDesires","props","addToWatchList","removeFromWatchList","item","state","watchWill","setState","this","className","style","width","src","backdrop_path","poster_path","alt","title","vote_average","type","onClick","Component","MoviesList","movies","map","movie","key","id","ListMoviesWillWatch","arrMoviesWatch","length","Filters","changeSortingMethod","htmlFor","onChange","event","target","value","Pagination","currentPage","totalPages","changeCurrentPage","aria-label","role","App","filter","getMovies","link","sortBy","fetch","then","response","json","data","total_pages","results","selector","method","prevProps","prevState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f0f1b0b1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\n\nclass MovieItem extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\twatchWill: false,\n\t\t};\n\t}\n\n\tchangeViewingDesires = () => {\n\t\tconst { addToWatchList, removeFromWatchList, item } = this.props;\n\t\tthis.state.watchWill ? removeFromWatchList(item) : addToWatchList(item);\n\n    this.setState({\n      watchWill: !this.state.watchWill,\n    })\n  }\n\n\trender() {\n\t\tconst { item } = this.props;\n\t\tconst { watchWill } = this.state;\n\t\treturn (\n\t\t\t<div className='card' style={{ width: '100%' }}>\n\t\t\t\t<img\n\t\t\t\t\tclassName='card-img-top'\n\t\t\t\t\tsrc={`https://image.tmdb.org/t/p/w500${\n\t\t\t\t\t\titem.backdrop_path || item.poster_path\n\t\t\t\t\t}`}\n\t\t\t\t\talt={item.title}\n\t\t\t\t/>\n\t\t\t\t<div className='card-body'>\n\t\t\t\t\t<h6 className='card-title'>{item.title}</h6>\n\t\t\t\t\t<div className='d-flex justify-content-between align-items-center'>\n\t\t\t\t\t\t<p className='mb-0'>Rating: {item.vote_average}</p>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\tonClick={this.changeViewingDesires}\n\t\t\t\t\t\t\tclassName={`btn ${watchWill ? 'btn-success' : 'btn-secondary'}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tWill Watch\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default MovieItem;","import React, { Component } from 'react';\nimport MovieItem from './MovieItem';\n\n\nclass MoviesList extends Component {\n  render() {\n    const { movies, addToWatchList, removeFromWatchList } = this.props;\n    return (\n\t\t\t<div className='row'>\n\t\t\t\t{movies.map((movie) => (\n\t\t\t\t\t<div key={movie.id} className='col-4 mb-4'>\n\t\t\t\t\t\t<MovieItem\n\t\t\t\t\t\t\titem={movie}\n\t\t\t\t\t\t\taddToWatchList={addToWatchList}\n\t\t\t\t\t\t\tremoveFromWatchList={removeFromWatchList}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t);\n  }\n}\n\nexport default MoviesList;","import React, { Component } from 'react';\n\nclass ListMoviesWillWatch extends Component {\n  render() {\n    const { arrMoviesWatch } = this.props;\n    return (\n\t\t\t<div className='box--willwatch'>\n\t\t\t\t<h4>Will Watch: {arrMoviesWatch.length} movies</h4>\n\t\t\t\t<ul className='list-group'>\n\t\t\t\t\t{arrMoviesWatch.map((item) => (\n\t\t\t\t\t\t<li key={item.id} className='list-group-item'>\n\t\t\t\t\t\t\t<div className='d-flex justify-content-between'>\n\t\t\t\t\t\t\t\t<div>{item.title}</div>\n\t\t\t\t\t\t\t\t<div>{item.vote_average}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n  }\n}\n\nexport default ListMoviesWillWatch;","import React, { Component } from 'react';\n\nclass Filters extends Component {\n\trender() {\n    const { changeSortingMethod } = this.props;\n    const handleChange = (event) => {\n\t\t\tchangeSortingMethod(event.target.value);\n    }\n\t\treturn (\n\t\t\t<form className='mb-3'>\n\t\t\t\t<div className='form-group'>\n\t\t\t\t\t<label htmlFor='sort_by'>Sort by:</label>\n\t\t\t\t\t<select\n\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\tid='sort_by'\n\t\t\t\t\t\t// value={value}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value='popularity.desc'>Popular descending</option>\n\t\t\t\t\t\t<option value='popularity.asc'>Popular ascending</option>\n\t\t\t\t\t\t<option value='revenue.desc'>Rating descending</option>\n\t\t\t\t\t\t<option value='revenue.asc'>Rating ascending</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default Filters;","import React from 'react';\n\nconst Pagination = (props) => {\n  const { currentPage, totalPages, changeCurrentPage } = props;\n\n  const prevPage = () => {\n    if (currentPage === 1) {\n      return;\n    }\n    changeCurrentPage('previous');\n  };\n\n  const nextPage = () => {\n    if (currentPage === 500) {\n\t\t\treturn;\n\t\t}\n      changeCurrentPage('next');\n  }\n\n  return (\n\t\t<nav aria-label='Статьи по Bootstrap 4'>\n\t\t\t<ul className='pagination justify-content-center'>\n\t\t\t\t<li\n\t\t\t\t\tclassName={`page-item ${currentPage === 1 ? 'disabled' : ''}`}\n\t\t\t\t\trole='button'\n\t\t\t\t\tonClick={prevPage}\n\t\t\t\t>\n\t\t\t\t\t<span className='page-link'>Previous</span>\n\t\t\t\t</li>\n\t\t\t\t<li className='page-item disabled'>\n\t\t\t\t\t<span className='page-link'>Current page: {currentPage}</span>\n\t\t\t\t</li>\n\t\t\t\t<li className='page-item disabled'>\n\t\t\t\t\t<span className='page-link'>Total pages: {totalPages}</span>\n\t\t\t\t</li>\n\t\t\t\t<li\n\t\t\t\t\tclassName={`page-item ${currentPage === 500 ? 'disabled' : ''}`}\n\t\t\t\t\trole='button'\n\t\t\t\t\tonClick={nextPage}\n\t\t\t\t>\n\t\t\t\t\t<span className='page-link'>Next</span>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</nav>\n\t);\n}\n\nexport default Pagination;","import React, { Component } from 'react';\nimport MoviesList from './MoviesList';\nimport ListMoviesWillWatch from './ListMoviesWillWatch';\nimport { API_URL, API_KEY_3 } from '../api';\nimport Filters from './Filters';\nimport Pagination from './Pagination';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tmovies: [],\n\t\t\tarrMoviesWatch: [],\n\t\t\tsortBy: 'popularity.desc',\n\t\t\ttotalPages: null,\n\t\t\tcurrentPage: 1,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getMovies();\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (\n\t\t\tprevState.sortBy !== this.state.sortBy ||\n\t\t\tprevState.currentPage !== this.state.currentPage\n\t\t) {\n\t\t\tthis.getMovies();\n\t\t}\n\t}\n\n\taddToWatchList = (movie) => {\n\t\tthis.setState({\n\t\t\tarrMoviesWatch: [...this.state.arrMoviesWatch, movie],\n\t\t});\n\t};\n\n\tremoveFromWatchList = (movie) => {\n\t\tthis.setState({\n\t\t\tarrMoviesWatch: this.state.arrMoviesWatch.filter((item) => {\n\t\t\t\treturn item.id !== movie.id;\n\t\t\t}),\n\t\t});\n\t};\n\n\tgetMovies = () => {\n\t\tconst link = `${API_URL}/discover/movie?api_key=${API_KEY_3}&sort_by=${this.state.sortBy}&language=en-US&page=${this.state.currentPage}`;\n\t\tfetch(link)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\ttotalPages: data.total_pages,\n\t\t\t\t\tmovies: data.results,\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tchangeSortingMethod = (selector) => {\n\t\tthis.setState({\n\t\t\tsortBy: selector,\n\t\t});\n\t};\n\n\tchangeCurrentPage = (method) => {\n\t\tif (method === 'next') {\n\t\t\tthis.setState({\n\t\t\t\tcurrentPage: this.state.currentPage + 1\n\t\t\t});\n\n\t\t} else if (method === 'previous') {\n\t\t\tthis.setState({\n\t\t\t\tcurrentPage: this.state.currentPage - 1\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { movies, arrMoviesWatch, currentPage, totalPages } = this.state;\n\t\treturn (\n\t\t\t<div className='container'>\n\t\t\t\t<div className='row mt-4'>\n\t\t\t\t\t<div className='col-4 filter'>\n\t\t\t\t\t\t<div className='card' style={{ width: '100%' }}>\n\t\t\t\t\t\t\t<div className='card-body'>\n\t\t\t\t\t\t\t\t<h3>Filters:</h3>\n\t\t\t\t\t\t\t\t<Filters changeSortingMethod={this.changeSortingMethod} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col-9'>\n\t\t\t\t\t\t<MoviesList\n\t\t\t\t\t\t\tmovies={movies}\n\t\t\t\t\t\t\taddToWatchList={this.addToWatchList}\n\t\t\t\t\t\t\tremoveFromWatchList={this.removeFromWatchList}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Pagination\n\t\t\t\t\t\t\tcurrentPage={currentPage}\n\t\t\t\t\t\t\ttotalPages={totalPages}\n\t\t\t\t\t\t\tchangeCurrentPage={this.changeCurrentPage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col-3'>\n\t\t\t\t\t\t<ListMoviesWillWatch arrMoviesWatch={arrMoviesWatch} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","const API_URL = 'https://api.themoviedb.org/3';\nconst API_KEY_3 = '3f4ca4f3a9750da53450646ced312397';\n\nexport { API_URL, API_KEY_3 };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}